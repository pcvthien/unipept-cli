#!/usr/bin/env ruby

require 'cri'
require 'faraday'
require 'yaml'

class Configuration

  attr_reader :config
  attr_reader :file_name

  def initialize
    @file_name = File.join(Dir.home, ".unipeptrc")
    if !File.exists? file_name
      @config = {}
    else
      @config = YAML.load_file file_name
    end
  end

  def save
    File.open(file_name, 'w') { |f| f.write config.to_yaml }
  end

  def [](*args)
    config.[](*args)
  end

  def []=(*args)
    config.[]=(*args)
  end

end

root_cmd = Cri::Command.new_basic_root.modify do
  name 'unipept'
  flag :v, :verbose, "verbose mode"
end

root_cmd.define_command('config') do
  usage 'config attr [value]'

  run do |opts, args, cmd|
    config = Configuration.new
    if args.size > 1
      config[args.first] = args[1]
      config.save
    elsif args.size == 1
      puts config[args.first]
    end
  end

end

root_cmd.define_command('single') do
  usage       'single [options]'
  aliases     :s
  summary     'Single Peptide Search'
  description 'Search Unipept for the given peptide and return taxons'

  flag :e, :equate, "equate I and L"

  run do |opts, args, cmd|
    peptide = STDIN.read.chomp

    host = Configuration.new['host']
    if host.nil?
      puts "WARNING: no host has been set, you can set the host with `unipept config host http://host.com/`"
      exit 1
    end

    puts Faraday.get("#{host}/api/v1/single.json", sequence: peptide, equate_il: opts[:equate]).body
  end
end

root_cmd.run(ARGV)
